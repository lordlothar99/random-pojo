<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<cache:annotation-driven />

	<bean id="cacheManager" class="org.springframework.cache.concurrent.ConcurrentMapCacheManager" />
	<bean id="keyGenerator" class="org.springframework.cache.interceptor.SimpleKeyGenerator" />

	<cache:advice id="cacheAdvice" cache-manager="cacheManager">
		<cache:caching cache="generators">
			<cache:cacheable method="*Generator" key-generator="keyGenerator" />
		</cache:caching>
	</cache:advice>

	<!-- apply the cacheable behavior to all BookService interfaces -->
	<aop:config>
		<aop:advisor advice-ref="cacheAdvice" pointcut="execution(* com.github.lordlothar99.random.RandomGenerators.*(..))" />
	</aop:config>

	<bean id="randomGenerators" class="com.github.lordlothar99.random.RandomGenerators" />

</beans>