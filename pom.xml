<?xml version="1.0" encoding="ISO-8859-1"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.lordlothar99.random-pojo</groupId>
	<artifactId>random-pojo</artifactId>
	<version>1.0.3-SNAPSHOT</version>
	<description>Random POJO generator tool</description>

	<properties>
		<maven.compiler.source>1.5</maven.compiler.source>
		<maven.compiler.target>1.5</maven.compiler.target>
		<spring.version>4.1.7.RELEASE</spring.version>
		<project.scm.id>github</project.scm.id>
	</properties>

	<scm>
		<url>https://github.com/lordlothar99/random-pojo.git</url>
		<developerConnection>scm:git:https://github.com/lordlothar99/random-pojo.git</developerConnection>
	  <tag>HEAD</tag>
  </scm>

	<developers>
		<developer>
			<id>lordlothar99</id>
			<name>Francois Lecomte</name>
		</developer>
	</developers>

	<dependencies>
		<!-- compile -->
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.2</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.12</version>
		</dependency>
		<!-- optional -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<optional>true</optional>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<optional>true</optional>
			<version>${spring.version}</version>
		</dependency>

		<!-- test -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<scope>test</scope>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
			<version>4.12</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
			<version>1.10.19</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback.</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>test</scope>
			<version>1.1.3</version>
		</dependency>
	</dependencies>

	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
			</plugins>
	    </pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.11</version>
				<configuration>
					<!-- git commit message -->
					<message>Maven artifacts for ${project.version}</message>
					<!-- disable webpage processing -->
					<noJekyll>true</noJekyll>
					<!-- matches distribution management repository url above -->
					<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
					<!-- remote branch name -->
					<branch>refs/heads/master</branch>
					<!-- If you remove this then the old artifact will be removed and new 
						one will replace. But with the merge tag you can just release by changing 
						the version -->
					<merge>true</merge>
					<includes>
						<include>**/*</include>
					</includes>
					<!-- github repo name -->
					<repositoryName>mvn-repo</repositoryName>
					<!-- github username -->
					<repositoryOwner>lordlothar99</repositoryOwner>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>